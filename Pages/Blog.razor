@page "/blog"
@using codeTopGBlazorWasm.Models
@using codeTopGBlazorWasm.Components
@inject IJSRuntime jsRuntime

<PageTitle>My Blog</PageTitle>

@if (query is null)
{
    <button @onclick="getAllData" class="btn-primary">Get Blog</button>
}

@if (spinner)
{
    <LoadingSpinnerSpin></LoadingSpinnerSpin>
}

@if (post is null)
{
    @if (hashnodeData is null)
    {
        <p> no post try to get some</p>
    }
    
}
else
{
    <ModalComponent Show="readmore" OnClose="DialogCancelHandler">
        <Title>@post.data.post.title</Title>
        <Body>            
            @((MarkupString)@post.data.post.content)
        </Body>
    </ModalComponent>
}



@*get posts for populated page*@
@if (hashnodeData is null)
{
    <p>Click the Get Blog button</p>
}
else
{
    @foreach (var item in hashnodeData.data.user.publication.posts)
    {
        <div class="container d-grid gap-3">
            <div class="row p-2 bg-light border">
                <div class="col-lg-3">
                    <img src="@item.coverImage.ToString()" class="img-fluid">
                </div>
                <div class="col-lg-9">
                    <div class="card-text p-2 bg-light border text-md-center fw-bold">
                        @item.title
                    </div>
                    <div class="card-body" @onclick=@(() => GetPost(item.slug))>
                        @item.brief
                        read more...
                    </div>
                </div>
            </div>
        </div>
    }
}


@code {
    private HashNodeModel? hashnodeData;
    private string? query;
    private HashNodePostModel? post;
    private bool readmore = false;
    private bool spinner = false;

    private void DialogCancelHandler(MouseEventArgs e)
    {
        readmore = false;
        post.data.post.content = string.Empty;
    }


    private async Task GetPost(string slug)
    {
        spinner = true;
        readmore = true;
        query = $"{{post(slug:\"{slug}\", hostname:\"codetopg\") {{ content title }} }}";
        post = await jsRuntime.InvokeAsync<HashNodePostModel>("getHashNodeInterop.getData", query);
        //Console.WriteLine("Title from post"+post.data.post.title);
        spinner = false;
        await Task.CompletedTask;
    }

    private async Task getAllData()
    {
        spinner = true;
        query = "{user(username: \"codetopg\") {publication {posts(page: 0) {slug title brief coverImage dateUpdated }}}}";
        hashnodeData = await jsRuntime.InvokeAsync<HashNodeModel>("getHashNodeInterop.getData", query);
        //Console.WriteLine("data from get" + hashnodeData);
        spinner = false;
        await Task.CompletedTask;
    }
}
