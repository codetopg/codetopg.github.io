@page "/fetchdata"
@using codeTopGBlazorWasm.ApiServices
@using codeTopGBlazorWasm.Components
@using codeTopGBlazorWasm.Models 
@implements IDisposable
@inject IGetWeatherApi getWeather
@inject IJSRuntime jsRuntime

<PageTitle>Open API Weather forecast</PageTitle>
@if (spinner)
{
     <LoadingSpinnerSpin></LoadingSpinnerSpin>
}

@if (weatherData is null)
{
    <p>@errorMessages</p>
}
else
{
    while (weatherData is null)
    {
      <LoadingSpinnerDefault></LoadingSpinnerDefault>  
    }

    <h3>Weather forecast for: @weatherData.city.name</h3>

    <div class="card-group">
        @for (int i = 0; i < weatherData.list.Length; i++)
        {
            <WeatherComponent Seconds="@weatherData.list[i].dt"
                      LowTemp="@weatherData.list[i].main.temp_max"
                      HighTemp="@weatherData.list[i].main.temp_max"
                      Description="@weatherData.list[i].weather[0].description"
                      Icon="@weatherData.list[i].weather[0].icon" />
            i += 7;
        }
    </div>
}


@if (coods == null)
{
    <LoadingSpinnerDefault></LoadingSpinnerDefault>
}
else
{
    @*if(weatherData is not null)
    {
    }*@
    <button @onclick="GetForcast" class="btn btn-primary">Get Forcast for the next 5 days</button>

}

<button class="btn btn-primary" @onclick=GetPosition >Get Coords</button>

@code {
    private GetCoords coods;
    private CoordsModel location;
    //private GetWeatherApi weather; inject Interface on top
    public OpenWeatherModel weatherData { get; set; }
    private string? errorMessages;
    private bool spinner = false;

    private async Task GetPosition()
    {
        spinner = true;
        location = await coods.GetCoord();
        //Console.WriteLine("coods on blazor " + location.Longitude + " latitude" + location.Latitude);
        spinner = false;
        await Task.CompletedTask;
    }

    public async Task GetForcast()
    {
        weatherData = await getWeather.GetForcast();

    }

    protected override void OnInitialized()
    {
        coods = new(jsRuntime);
      
    }


    public void Dispose() { }
}
